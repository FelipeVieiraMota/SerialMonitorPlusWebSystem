/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.     
 */
/**
 * Author:  felipe
 * Created: Nov 12, 2017
 */
/*CADASTROS*/

/*
    -----------------------------------
        CODIGOS DE CADA ENTIDADE 
    -----------------------------------
        #100 -(ID)   = DISCIPLINA
        #200 -(ID)   = CURSO
        #300 -(ID)   = SEMESTRE
        #400 -(RFID) = codigo matricula aluno
        #500 -(ID)   = CODIGO TURMA
        #600 -(ID)   = SEMANA DE AULA
        #700 -(ID)   = DIA_DE_AULA
        #800 -(ID)   = CODIGO
        #900 - (ID)  = SALA
    -----------------------------------
*/

DROP DATABASE BD_REGRA;
CREATE DATABASE BD_REGRA;
USE BD_REGRA;
ALTER DATABASE `BD_REGRA` CHARSET = Latin1 COLLATE = latin1_swedish_ci;
/*1 FLUXO - TABELAS PAI*/

CREATE TABLE IF NOT EXISTS DISCIPLINA(
    ID_DISCIPLINA INTEGER NOT NULL AUTO_INCREMENT, 
    NOME_DISCIPLINA VARCHAR(45),    
    ABREVIACAO_DISCIPLINA VARCHAR(45),
    CODIGO_DISCIPLINA VARCHAR(45),
    CARGA_HOARARIA_DISCIPLINA VARCHAR(45),
    OBSERVACOES VARCHAR(255),
    CONSTRAINT PRIMARY KEY(ID_DISCIPLINA)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS CURSO(
    ID_CURSO INTEGER NOT NULL AUTO_INCREMENT, 
    NOME_CURSO VARCHAR(255), 
    TIPO_CURSO VARCHAR(45), 
    DURACAO VARCHAR(45),
    CODIGO_CURSO VARCHAR(45),
    QTD_SEMESTRES VARCHAR(100),
    CARGA_HORARIA VARCHAR(45),
    OBSERVACOES VARCHAR(255),
    CONSTRAINT PRIMARY KEY (ID_CURSO)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS ALUNO (  
    ID_ALUNO INTEGER NOT NULL AUTO_INCREMENT,
    NOME_ALUNO VARCHAR(255) NOT NULL,
    NOME_MAE_ALUNO VARCHAR(255) NOT NULL,
    NOME_PAI_ALUNO VARCHAR(45) NOT NULL,      
    CPF_ALUNO VARCHAR(45) NOT NULL,
    SEXO_ALUNO VARCHAR(45) NOT NULL,
    IDADE_ALUNO VARCHAR(45) NOT NULL,
    DATA_NASCIMENTO_ALUNO VARCHAR(45) NOT NULL,
    EMAIL_ALUNO VARCHAR(45) NOT NULL,
    CELULAR_ALUNO VARCHAR(45) NOT NULL,
    RG_ALUNO VARCHAR(45) NULL,
    CODIGO_CARTAO_RFID VARCHAR(45) NOT NULL,
    CODIGO_MATRICULA_ALUNO VARCHAR(45),    
  CONSTRAINT PRIMARY KEY (ID_ALUNO))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS TURMA(
    ID_TURMA INTEGER NOT NULL AUTO_INCREMENT, 
    ID_CURSO INTEGER NOT NULL, 
    NOME_TURMA VARCHAR(100), 
    ABREVIACAO_TURMA VARCHAR(15), 
    CICLO VARCHAR(10) NOT NULL,
    CODIGO_TURMA VARCHAR(45),
    PERIODO VARCHAR(45),
    OBSERVACOES VARCHAR(255),
    CONSTRAINT PRIMARY KEY(ID_TURMA),
    CONSTRAINT FK_ID_CURSO_1 FOREIGN KEY (ID_CURSO) REFERENCES CURSO(ID_CURSO)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS ANO_SEMESTRE(
    ID_ANO_SEMESTRE INTEGER NOT NULL AUTO_INCREMENT, 
    ANO_SEMESTRE VARCHAR(45), 
    OBSERVACOES VARCHAR(255),
    CODIGO_ANO_SEMESTRE VARCHAR(45),
    CONSTRAINT PRIMARY KEY (ID_ANO_SEMESTRE)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS PROFESSOR(
    ID_PROFESSOR INTEGER NOT NULL AUTO_INCREMENT,
    NOME_PROFESSOR VARCHAR(45) NOT NULL, 
    IDADE_PROFESSOR INTEGER NOT NULL,         
    DATA_NASCIMENTO_PROFESSOR VARCHAR(12) NOT NULL, 
    FORMACAO_PROFISSIONAL_PROFESSOR VARCHAR(45), 
    ESPECIALIZACAO_PROFISSIONAL_PROFESSOR VARCHAR(45), 
    CPF_PROFESSOR VARCHAR(45), 
    RG_PROFESSOR VARCHAR(45), 
    SEXO_PROFESSOR VARCHAR(45), 
    CELULAR_PROFESSOR VARCHAR(45),
    CODIGO_MATRICULA_PROFESSOR VARCHAR(45),
    CONSTRAINT PRIMARY KEY (ID_PROFESSOR)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS SALA(
    ID_SALA INTEGER NOT NULL AUTO_INCREMENT, 
    NOME_SALA VARCHAR(255),
    TIPO_DE_SALA VARCHAR(45),    
    NUMERO_SALA VARCHAR(45),    
    ANDAR_SALA VARCHAR(11),
    CODIGO_SALA VARCHAR(11),
    OBSERVACOES VARCHAR(255),
    CONSTRAINT PRIMARY KEY(ID_SALA)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS DIA_DE_PROVA(
    ID_DIA_DE_PROVA INTEGER NOT NULL AUTO_INCREMENT, 
    DATA_DA_PROVA VARCHAR(45),    
    NUMERO_SALA VARCHAR(45),   
    DIA_DA_SEMANA VARCHAR(45),
    HORARIO_INICIAL VARCHAR(45),
    HORARIO_FINAL VARCHAR(45),
    OBSERVACOES VARCHAR(255),
    CONSTRAINT PRIMARY KEY(ID_DIA_DE_PROVA)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS ALUNO_TURMA(
    ID_TURMA INTEGER NOT NULL,         
    ID_ALUNO INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_TURMA_1 FOREIGN KEY (ID_TURMA) REFERENCES TURMA(ID_TURMA), 
    CONSTRAINT FK_ID_ALUNO_2 FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(ID_ALUNO)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS DISCIPLINA_CURSO(
    ID_CURSO INTEGER NOT NULL,         
    ID_DISCIPLINA INTEGER NOT NULL,
    DISCIPLINA_CURSO VARCHAR(255) NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_CURSO_3 FOREIGN KEY (ID_CURSO) REFERENCES CURSO(ID_CURSO), 
    CONSTRAINT FK_ID_DISCIPLINA_4 FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS ANO_SEMESTRE_TURMA(
    ID_ANO_SEMESTRE INTEGER NOT NULL, 
    ID_TURMA INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255) NOT NULL,
    CONSTRAINT FK_ID_ANO_SEMESTRE_5 FOREIGN KEY (ID_ANO_SEMESTRE) REFERENCES ANO_SEMESTRE(ID_ANO_SEMESTRE),
    CONSTRAINT FK_ID_TURMA_6 FOREIGN KEY (ID_TURMA) REFERENCES TURMA(ID_TURMA))
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS DISCIPLINA_PROFESSOR(
    ID_PROFESSOR INTEGER NOT NULL,         
    ID_DISCIPLINA INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_PROFESSOR_7 FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSOR(ID_PROFESSOR), 
    CONSTRAINT FK_ID_DISCIPLINA_8 FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS FREQUENCIA_DO_ALUNO(
    ID_ALUNO INTEGER NOT NULL,         
    ID_DIA_DE_PROVA INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_ALUNO_9 FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(ID_ALUNO), 
    CONSTRAINT FK_ID_DIA_DE_PROVA_10 FOREIGN KEY (ID_DIA_DE_PROVA) REFERENCES DIA_DE_PROVA(ID_DIA_DE_PROVA)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS DISCIPLINA_DIA_DE_PROVA(
    ID_DISCIPLINA INTEGER NOT NULL,         
    ID_DIA_DE_PROVA INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_DIA_DE_PROVA_11 FOREIGN KEY (ID_DIA_DE_PROVA) REFERENCES DIA_DE_PROVA(ID_DIA_DE_PROVA), 
    CONSTRAINT FK_ID_DISCIPLINA_12 FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA)) 
ENGINE = innoDB;


CREATE TABLE IF NOT EXISTS TURMA_DIA_DE_PROVA(
    ID_TURMA INTEGER NOT NULL,         
    ID_DIA_DE_PROVA INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_DIA_DE_PROVA_13 FOREIGN KEY (ID_DIA_DE_PROVA) REFERENCES DIA_DE_PROVA(ID_DIA_DE_PROVA), 
    CONSTRAINT FK_ID_TURMA_14 FOREIGN KEY (ID_TURMA) REFERENCES TURMA(ID_TURMA)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS PROFESSOR_DIA_DE_PROVA(
    ID_PROFESSOR INTEGER NOT NULL,         
    ID_DIA_DE_PROVA INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_DIA_DE_PROVA_15 FOREIGN KEY (ID_DIA_DE_PROVA) REFERENCES DIA_DE_PROVA(ID_DIA_DE_PROVA), 
    CONSTRAINT FK_ID_PROFESSOR_16 FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSOR(ID_PROFESSOR)) 
ENGINE = innoDB;

CREATE TABLE IF NOT EXISTS SALA_DIA_DE_PROVA(
    ID_SALA INTEGER NOT NULL,         
    ID_DIA_DE_PROVA INTEGER NOT NULL,
    OBSERVACOES VARCHAR(255),
    CONSTRAINT FK_ID_DIA_DE_PROVA_17 FOREIGN KEY (ID_DIA_DE_PROVA) REFERENCES DIA_DE_PROVA(ID_DIA_DE_PROVA), 
    CONSTRAINT FK_ID_SALA_18 FOREIGN KEY (ID_SALA) REFERENCES SALA(ID_SALA)) 
ENGINE = innoDB;



/*CADASTROS*/

/*
    -----------------------------------
        CODIGOS DE CADA ENTIDADE 
    -----------------------------------
        #100 -(ID)   = DISCIPLINA
        #200 -(ID)   = CURSO
        #300 -(ID)   = SEMESTRE
        #400 -(RFID) = codigo matricula aluno
        #500 -(ID)   = CODIGO TURMA
        #600 -(ID)   = SEMANA DE AULA
        #700 -(ID)   = DIA_DE_AULA
        #800 -(ID)   = CODIGO do PROFESSOR
        #900 - (ID)  = SALA
    -----------------------------------
*/


/*CADASTRANDO UMA DISCIPLINA EM UM CURSO DISPONIVEL*/
INSERT INTO DISCIPLINA(       
    NOME_DISCIPLINA,    
    ABREVIACAO_DISCIPLINA,
    CODIGO_DISCIPLINA,
    CARGA_HOARARIA_DISCIPLINA,
    OBSERVACOES)
    VALUES(
     "PROGRAMACAO ORIENTEDA A OBJETOS-1"
    ,"POO-1"
    ,"#100-1"
    ,"40 HORAS"
    ,"PRIMEIRO CICLO DA DISCIPLINA MINISTRADA PARA INTRODUCAO A PROGRAMACAO ORIENTADA A OBJETOS");

INSERT INTO CURSO(
    NOME_CURSO, 
    TIPO_CURSO, 
    DURACAO,
    CODIGO_CURSO,
    QTD_SEMESTRES,
    CARGA_HORARIA,
    OBSERVACOES)
    VALUES(
     "BACHARELADO EM SISTEMAS DE INFORMACAO"
    ,"GARDUACAO"
    ,"4 ANOS"
    ,"#200-1"
    ,"8"
    ,"3600 HORAS"
    ,"CURSO DE GARDUACAO VOLTADO PARA A AREA DE SISTEMAS");

INSERT INTO DISCIPLINA_CURSO(
    ID_CURSO,         
    ID_DISCIPLINA,
    DISCIPLINA_CURSO,
    OBSERVACOES)
    VALUES(
     1
    ,1
    ,"POO-1/BACHARELADO EM SISTEMAS DE INFORMACAO"
    ,"DISCIPLINA DE POO ATRIBUIDA PARA O CURSO DE BACHARELADO EM SISTEMAS DE INFORMACOES");


/* Cadastrando uma turma a um curso*/
INSERT INTO TURMA (
    ID_CURSO, 
    NOME_TURMA, 
    ABREVIACAO_TURMA, 
    CICLO,
    CODIGO_TURMA,
    PERIODO,
    OBSERVACOES)
VALUES(
     1
    ,"BACHARELADO EM SISTEMAS DE INFORMACOES-8"
    ,"BSI-8"
    ,"8 CLICLO"
    ,"#500-1"
    ,"NOTURNO"
    ,"TURMA DO SEGUNDO SEMESTRE DE 2017");

 /*CRIANDO UM SEMESTRE E VINCULANDO COM A TURMA*/

INSERT INTO ANO_SEMESTRE(ANO_SEMESTRE,OBSERVACOES,CODIGO_ANO_SEMESTRE)
    VALUES("2017/2","SEGUNDO SEMESTRE DE 2017","#300-1");
   
INSERT INTO ANO_SEMESTRE_TURMA(ID_ANO_SEMESTRE,ID_TURMA,OBSERVACOES)
    VALUES(1,1,"TURMA DE BSI -8 NO SEGUNDO SEMESTRE DE 2017");


INSERT INTO SALA(
     TIPO_DE_SALA
    ,NOME_SALA 
    ,NUMERO_SALA    
    ,ANDAR_SALA 
    ,CODIGO_SALA
    ,OBSERVACOES)
    VALUES("COMUM","SALA-40","40","4ยบ-ANDAR","#900-1","SALA DE AULA COMUM LOCALIZADA NO 4ยบ ANDAR.");

/* Cadastrando um aluno a uma turma */

INSERT INTO ALUNO(
    NOME_ALUNO ,
    NOME_MAE_ALUNO ,
    NOME_PAI_ALUNO ,      
    CPF_ALUNO ,
    SEXO_ALUNO ,
    IDADE_ALUNO ,
    DATA_NASCIMENTO_ALUNO ,
    EMAIL_ALUNO ,
    CELULAR_ALUNO ,
    RG_ALUNO ,
    CODIGO_CARTAO_RFID ,
    CODIGO_MATRICULA_ALUNO)
VALUES(
     "FELIPE VIEIRA MOTA"
    ,"MARIA JOSE VIEIRA"
    ,"CELIO ALEXANDRE MOTA"
    ,"39323658871"
    ,"MASCULINO"
    ,"26"
    ,"11/03/1991"
    ,"felipevieiramota@gmail.com"
    ,"+5513981325132"
    ,"477572789"
    ,"250118440"
    ,"#400-250118440"
);

INSERT INTO ALUNO_TURMA(ID_TURMA,ID_ALUNO,OBSERVACOES)
    VALUES(1,1,"TURMA DE BSI DO SEGUNDO SEMESTRE DE  2017");


INSERT INTO PROFESSOR(
     NOME_PROFESSOR
    ,IDADE_PROFESSOR
    ,DATA_NASCIMENTO_PROFESSOR
    ,FORMACAO_PROFISSIONAL_PROFESSOR
    ,ESPECIALIZACAO_PROFISSIONAL_PROFESSOR
    ,CPF_PROFESSOR
    ,RG_PROFESSOR
    ,SEXO_PROFESSOR
    ,CELULAR_PROFESSOR
    ,CODIGO_MATRICULA_PROFESSOR)
    VALUES(
     "JOAO CARLOS"
    ,40
    ,"20/06/1970"
    ,"BACHAREL EM CIENCIAS DA COMPUTACAO"
    ,"MESTRE EM ENGENHARIA MECANICA"
    ,"6546464654"
    ,"987987987"
    ,"MASCULINO"
    ,"2132321321"
    ,"#800-1");


INSERT INTO DISCIPLINA_PROFESSOR(ID_PROFESSOR,ID_DISCIPLINA,OBSERVACOES)
    VALUES(1,1,"DISCIPLINA DE POB");

select * from PROFESSOR;

SELECT * FROM 
    CURSO C, 
    TURMA T/*, 
    ANO_SEMESTRE_TURMA AST, 
    ANO_SEMESTRE ANS*/
WHERE 
    C.ID_CURSO = T.ID_CURSO;/*
AND 
    ANS.ID_ANO_SEMESTRE = AST.ID_ANO_SEMESTRE
AND 
    T.ID_TURMA = AST.ID_TURMA;